use crate::types::*;

/* automatically generated by rust-bindgen 0.66.1 */

#[no_mangle]
pub unsafe extern "system" fn cudnnGetVersion() -> usize {
    unimplemented!()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetMaxDeviceVersion() -> usize {
    unimplemented!()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetCudartVersion() -> usize {
    unimplemented!()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetErrorString(
    status: cudnnStatus_t,
) -> *const ::std::os::raw::c_char {
    unimplemented!()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnQueryRuntimeError(
    handle: cudnnHandle_t,
    rstatus: *mut cudnnStatus_t,
    mode: cudnnErrQueryMode_t,
    tag: *mut cudnnRuntimeTag_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetProperty(
    type_: libraryPropertyType,
    value: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreate(handle: *mut cudnnHandle_t) -> cudnnStatus_t {
    crate::create(handle)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroy(handle: cudnnHandle_t) -> cudnnStatus_t {
    crate::destroy(handle)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetStream(
    handle: cudnnHandle_t,
    streamId: cudaStream_t,
) -> cudnnStatus_t {
    crate::set_stream(streamId)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetStream(
    handle: cudnnHandle_t,
    streamId: *mut cudaStream_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateTensorDescriptor(
    tensorDesc: *mut cudnnTensorDescriptor_t,
) -> cudnnStatus_t {
    crate::cudnn_create_tensor_descriptor(tensorDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetTensor4dDescriptor(
    tensorDesc: cudnnTensorDescriptor_t,
    format: cudnnTensorFormat_t,
    dataType: cudnnDataType_t,
    n: ::std::os::raw::c_int,
    c: ::std::os::raw::c_int,
    h: ::std::os::raw::c_int,
    w: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetTensor4dDescriptorEx(
    tensorDesc: cudnnTensorDescriptor_t,
    dataType: cudnnDataType_t,
    n: ::std::os::raw::c_int,
    c: ::std::os::raw::c_int,
    h: ::std::os::raw::c_int,
    w: ::std::os::raw::c_int,
    nStride: ::std::os::raw::c_int,
    cStride: ::std::os::raw::c_int,
    hStride: ::std::os::raw::c_int,
    wStride: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::set_tensor_4d_descriptor_ex(
        tensorDesc, dataType, n, c, h, w, nStride, cStride, hStride, wStride,
    )
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetTensor4dDescriptor(
    tensorDesc: cudnnTensorDescriptor_t,
    dataType: *mut cudnnDataType_t,
    n: *mut ::std::os::raw::c_int,
    c: *mut ::std::os::raw::c_int,
    h: *mut ::std::os::raw::c_int,
    w: *mut ::std::os::raw::c_int,
    nStride: *mut ::std::os::raw::c_int,
    cStride: *mut ::std::os::raw::c_int,
    hStride: *mut ::std::os::raw::c_int,
    wStride: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetTensorNdDescriptor(
    tensorDesc: cudnnTensorDescriptor_t,
    dataType: cudnnDataType_t,
    nbDims: ::std::os::raw::c_int,
    dimA: *const ::std::os::raw::c_int,
    strideA: *const ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::set_tensor_nd_decriptor(tensorDesc, dataType, nbDims, dimA, strideA)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetTensorNdDescriptorEx(
    tensorDesc: cudnnTensorDescriptor_t,
    format: cudnnTensorFormat_t,
    dataType: cudnnDataType_t,
    nbDims: ::std::os::raw::c_int,
    dimA: *const ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetTensorNdDescriptor(
    tensorDesc: cudnnTensorDescriptor_t,
    nbDimsRequested: ::std::os::raw::c_int,
    dataType: *mut cudnnDataType_t,
    nbDims: *mut ::std::os::raw::c_int,
    dimA: *mut ::std::os::raw::c_int,
    strideA: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetTensorSizeInBytes(
    tensorDesc: cudnnTensorDescriptor_t,
    size: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyTensorDescriptor(
    tensorDesc: cudnnTensorDescriptor_t,
) -> cudnnStatus_t {
    crate::destroy_tensor_descriptor(tensorDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnInitTransformDest(
    transformDesc: cudnnTensorTransformDescriptor_t,
    srcDesc: cudnnTensorDescriptor_t,
    destDesc: cudnnTensorDescriptor_t,
    destSizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateTensorTransformDescriptor(
    transformDesc: *mut cudnnTensorTransformDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetTensorTransformDescriptor(
    transformDesc: cudnnTensorTransformDescriptor_t,
    nbDims: u32,
    destFormat: cudnnTensorFormat_t,
    padBeforeA: *const i32,
    padAfterA: *const i32,
    foldA: *const u32,
    direction: cudnnFoldingDirection_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetTensorTransformDescriptor(
    transformDesc: cudnnTensorTransformDescriptor_t,
    nbDimsRequested: u32,
    destFormat: *mut cudnnTensorFormat_t,
    padBeforeA: *mut i32,
    padAfterA: *mut i32,
    foldA: *mut u32,
    direction: *mut cudnnFoldingDirection_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyTensorTransformDescriptor(
    transformDesc: cudnnTensorTransformDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnTransformTensor(
    handle: cudnnHandle_t,
    alpha: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::transform_tensor(handle, alpha, xDesc, x, beta, yDesc, y)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnTransformTensorEx(
    handle: cudnnHandle_t,
    transDesc: cudnnTensorTransformDescriptor_t,
    alpha: *const ::std::os::raw::c_void,
    srcDesc: cudnnTensorDescriptor_t,
    srcData: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    destDesc: cudnnTensorDescriptor_t,
    destData: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnAddTensor(
    handle: cudnnHandle_t,
    alpha: *const ::std::os::raw::c_void,
    aDesc: cudnnTensorDescriptor_t,
    A: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    cDesc: cudnnTensorDescriptor_t,
    C: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::add_tensor(handle, alpha, aDesc, A, beta, cDesc, C)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateOpTensorDescriptor(
    opTensorDesc: *mut cudnnOpTensorDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetOpTensorDescriptor(
    opTensorDesc: cudnnOpTensorDescriptor_t,
    opTensorOp: cudnnOpTensorOp_t,
    opTensorCompType: cudnnDataType_t,
    opTensorNanOpt: cudnnNanPropagation_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetOpTensorDescriptor(
    opTensorDesc: cudnnOpTensorDescriptor_t,
    opTensorOp: *mut cudnnOpTensorOp_t,
    opTensorCompType: *mut cudnnDataType_t,
    opTensorNanOpt: *mut cudnnNanPropagation_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyOpTensorDescriptor(
    opTensorDesc: cudnnOpTensorDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnOpTensor(
    handle: cudnnHandle_t,
    opTensorDesc: cudnnOpTensorDescriptor_t,
    alpha1: *const ::std::os::raw::c_void,
    aDesc: cudnnTensorDescriptor_t,
    A: *const ::std::os::raw::c_void,
    alpha2: *const ::std::os::raw::c_void,
    bDesc: cudnnTensorDescriptor_t,
    B: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    cDesc: cudnnTensorDescriptor_t,
    C: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateReduceTensorDescriptor(
    reduceTensorDesc: *mut cudnnReduceTensorDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetReduceTensorDescriptor(
    reduceTensorDesc: cudnnReduceTensorDescriptor_t,
    reduceTensorOp: cudnnReduceTensorOp_t,
    reduceTensorCompType: cudnnDataType_t,
    reduceTensorNanOpt: cudnnNanPropagation_t,
    reduceTensorIndices: cudnnReduceTensorIndices_t,
    reduceTensorIndicesType: cudnnIndicesType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetReduceTensorDescriptor(
    reduceTensorDesc: cudnnReduceTensorDescriptor_t,
    reduceTensorOp: *mut cudnnReduceTensorOp_t,
    reduceTensorCompType: *mut cudnnDataType_t,
    reduceTensorNanOpt: *mut cudnnNanPropagation_t,
    reduceTensorIndices: *mut cudnnReduceTensorIndices_t,
    reduceTensorIndicesType: *mut cudnnIndicesType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyReduceTensorDescriptor(
    reduceTensorDesc: cudnnReduceTensorDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetReductionIndicesSize(
    handle: cudnnHandle_t,
    reduceTensorDesc: cudnnReduceTensorDescriptor_t,
    aDesc: cudnnTensorDescriptor_t,
    cDesc: cudnnTensorDescriptor_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetReductionWorkspaceSize(
    handle: cudnnHandle_t,
    reduceTensorDesc: cudnnReduceTensorDescriptor_t,
    aDesc: cudnnTensorDescriptor_t,
    cDesc: cudnnTensorDescriptor_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnReduceTensor(
    handle: cudnnHandle_t,
    reduceTensorDesc: cudnnReduceTensorDescriptor_t,
    indices: *mut ::std::os::raw::c_void,
    indicesSizeInBytes: usize,
    workspace: *mut ::std::os::raw::c_void,
    workspaceSizeInBytes: usize,
    alpha: *const ::std::os::raw::c_void,
    aDesc: cudnnTensorDescriptor_t,
    A: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    cDesc: cudnnTensorDescriptor_t,
    C: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetTensor(
    handle: cudnnHandle_t,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    valuePtr: *const ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnScaleTensor(
    handle: cudnnHandle_t,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    alpha: *const ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateFilterDescriptor(
    filterDesc: *mut cudnnFilterDescriptor_t,
) -> cudnnStatus_t {
    crate::cudnn_create_filter_descriptor(filterDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetFilter4dDescriptor(
    filterDesc: cudnnFilterDescriptor_t,
    dataType: cudnnDataType_t,
    format: cudnnTensorFormat_t,
    k: ::std::os::raw::c_int,
    c: ::std::os::raw::c_int,
    h: ::std::os::raw::c_int,
    w: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetFilter4dDescriptor(
    filterDesc: cudnnFilterDescriptor_t,
    dataType: *mut cudnnDataType_t,
    format: *mut cudnnTensorFormat_t,
    k: *mut ::std::os::raw::c_int,
    c: *mut ::std::os::raw::c_int,
    h: *mut ::std::os::raw::c_int,
    w: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetFilterNdDescriptor(
    filterDesc: cudnnFilterDescriptor_t,
    dataType: cudnnDataType_t,
    format: cudnnTensorFormat_t,
    nbDims: ::std::os::raw::c_int,
    filterDimA: *const ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::set_filter_nd_descriptor(filterDesc, dataType, format, nbDims, filterDimA)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetFilterNdDescriptor(
    filterDesc: cudnnFilterDescriptor_t,
    nbDimsRequested: ::std::os::raw::c_int,
    dataType: *mut cudnnDataType_t,
    format: *mut cudnnTensorFormat_t,
    nbDims: *mut ::std::os::raw::c_int,
    filterDimA: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetFilterSizeInBytes(
    filterDesc: cudnnFilterDescriptor_t,
    size: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnTransformFilter(
    handle: cudnnHandle_t,
    transDesc: cudnnTensorTransformDescriptor_t,
    alpha: *const ::std::os::raw::c_void,
    srcDesc: cudnnFilterDescriptor_t,
    srcData: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    destDesc: cudnnFilterDescriptor_t,
    destData: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyFilterDescriptor(
    filterDesc: cudnnFilterDescriptor_t,
) -> cudnnStatus_t {
    crate::destroy_filter_descriptor(filterDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSoftmaxForward(
    handle: cudnnHandle_t,
    algo: cudnnSoftmaxAlgorithm_t,
    mode: cudnnSoftmaxMode_t,
    alpha: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::softmax_forward(handle, algo, mode, alpha, xDesc, x, beta, yDesc, y)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreatePoolingDescriptor(
    poolingDesc: *mut cudnnPoolingDescriptor_t,
) -> cudnnStatus_t {
    crate::cudnn_create_pooling_descriptor(poolingDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetPooling2dDescriptor(
    poolingDesc: cudnnPoolingDescriptor_t,
    mode: cudnnPoolingMode_t,
    maxpoolingNanOpt: cudnnNanPropagation_t,
    windowHeight: ::std::os::raw::c_int,
    windowWidth: ::std::os::raw::c_int,
    verticalPadding: ::std::os::raw::c_int,
    horizontalPadding: ::std::os::raw::c_int,
    verticalStride: ::std::os::raw::c_int,
    horizontalStride: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetPooling2dDescriptor(
    poolingDesc: cudnnPoolingDescriptor_t,
    mode: *mut cudnnPoolingMode_t,
    maxpoolingNanOpt: *mut cudnnNanPropagation_t,
    windowHeight: *mut ::std::os::raw::c_int,
    windowWidth: *mut ::std::os::raw::c_int,
    verticalPadding: *mut ::std::os::raw::c_int,
    horizontalPadding: *mut ::std::os::raw::c_int,
    verticalStride: *mut ::std::os::raw::c_int,
    horizontalStride: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetPoolingNdDescriptor(
    poolingDesc: cudnnPoolingDescriptor_t,
    mode: cudnnPoolingMode_t,
    maxpoolingNanOpt: cudnnNanPropagation_t,
    nbDims: ::std::os::raw::c_int,
    windowDimA: *const ::std::os::raw::c_int,
    paddingA: *const ::std::os::raw::c_int,
    strideA: *const ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::set_pooling_nd_descriptor(
        poolingDesc,
        mode,
        maxpoolingNanOpt,
        nbDims,
        windowDimA,
        paddingA,
        strideA,
    )
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetPoolingNdDescriptor(
    poolingDesc: cudnnPoolingDescriptor_t,
    nbDimsRequested: ::std::os::raw::c_int,
    mode: *mut cudnnPoolingMode_t,
    maxpoolingNanOpt: *mut cudnnNanPropagation_t,
    nbDims: *mut ::std::os::raw::c_int,
    windowDimA: *mut ::std::os::raw::c_int,
    paddingA: *mut ::std::os::raw::c_int,
    strideA: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetPoolingNdForwardOutputDim(
    poolingDesc: cudnnPoolingDescriptor_t,
    inputTensorDesc: cudnnTensorDescriptor_t,
    nbDims: ::std::os::raw::c_int,
    outputTensorDimA: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::get_pooling_nd_forward_output_dim(poolingDesc, inputTensorDesc, nbDims, outputTensorDimA)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetPooling2dForwardOutputDim(
    poolingDesc: cudnnPoolingDescriptor_t,
    inputTensorDesc: cudnnTensorDescriptor_t,
    n: *mut ::std::os::raw::c_int,
    c: *mut ::std::os::raw::c_int,
    h: *mut ::std::os::raw::c_int,
    w: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyPoolingDescriptor(
    poolingDesc: cudnnPoolingDescriptor_t,
) -> cudnnStatus_t {
    crate::destroy_pooling_descriptor(poolingDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnPoolingForward(
    handle: cudnnHandle_t,
    poolingDesc: cudnnPoolingDescriptor_t,
    alpha: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::pooling_forward(handle, poolingDesc, alpha, xDesc, x, beta, yDesc, y)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateActivationDescriptor(
    activationDesc: *mut cudnnActivationDescriptor_t,
) -> cudnnStatus_t {
    crate::cudnn_create_activation_descriptor(activationDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetActivationDescriptor(
    activationDesc: cudnnActivationDescriptor_t,
    mode: cudnnActivationMode_t,
    reluNanOpt: cudnnNanPropagation_t,
    coef: f64,
) -> cudnnStatus_t {
    crate::set_activation_descriptor(activationDesc, mode, reluNanOpt, coef)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetActivationDescriptor(
    activationDesc: cudnnActivationDescriptor_t,
    mode: *mut cudnnActivationMode_t,
    reluNanOpt: *mut cudnnNanPropagation_t,
    coef: *mut f64,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetActivationDescriptorSwishBeta(
    activationDesc: cudnnActivationDescriptor_t,
    swish_beta: f64,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetActivationDescriptorSwishBeta(
    activationDesc: cudnnActivationDescriptor_t,
    swish_beta: *mut f64,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyActivationDescriptor(
    activationDesc: cudnnActivationDescriptor_t,
) -> cudnnStatus_t {
    crate::destroy_activation_descriptor(activationDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnActivationForward(
    handle: cudnnHandle_t,
    activationDesc: cudnnActivationDescriptor_t,
    alpha: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::activation_forward(handle, activationDesc, alpha, xDesc, x, beta, yDesc, y)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateLRNDescriptor(
    normDesc: *mut cudnnLRNDescriptor_t,
) -> cudnnStatus_t {
    crate::cudnn_create_lrn_descriptor(normDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetLRNDescriptor(
    normDesc: cudnnLRNDescriptor_t,
    lrnN: ::std::os::raw::c_uint,
    lrnAlpha: f64,
    lrnBeta: f64,
    lrnK: f64,
) -> cudnnStatus_t {
    crate::set_lrn_descriptor(normDesc, lrnN, lrnAlpha, lrnBeta, lrnK)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetLRNDescriptor(
    normDesc: cudnnLRNDescriptor_t,
    lrnN: *mut ::std::os::raw::c_uint,
    lrnAlpha: *mut f64,
    lrnBeta: *mut f64,
    lrnK: *mut f64,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyLRNDescriptor(
    lrnDesc: cudnnLRNDescriptor_t,
) -> cudnnStatus_t {
    crate::destroy_lrn_descriptor(lrnDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnLRNCrossChannelForward(
    handle: cudnnHandle_t,
    normDesc: cudnnLRNDescriptor_t,
    lrnMode: cudnnLRNMode_t,
    alpha: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::lrn_cross_channel_forward(handle, normDesc, lrnMode, alpha, xDesc, x, beta, yDesc, y)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDivisiveNormalizationForward(
    handle: cudnnHandle_t,
    normDesc: cudnnLRNDescriptor_t,
    mode: cudnnDivNormMode_t,
    alpha: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    means: *const ::std::os::raw::c_void,
    temp: *mut ::std::os::raw::c_void,
    temp2: *mut ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDeriveBNTensorDescriptor(
    derivedBnDesc: cudnnTensorDescriptor_t,
    xDesc: cudnnTensorDescriptor_t,
    mode: cudnnBatchNormMode_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBatchNormalizationForwardInference(
    handle: cudnnHandle_t,
    mode: cudnnBatchNormMode_t,
    alpha: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    bnScaleBiasMeanVarDesc: cudnnTensorDescriptor_t,
    bnScale: *const ::std::os::raw::c_void,
    bnBias: *const ::std::os::raw::c_void,
    estimatedMean: *const ::std::os::raw::c_void,
    estimatedVariance: *const ::std::os::raw::c_void,
    epsilon: f64,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDeriveNormTensorDescriptor(
    derivedNormScaleBiasDesc: cudnnTensorDescriptor_t,
    derivedNormMeanVarDesc: cudnnTensorDescriptor_t,
    xDesc: cudnnTensorDescriptor_t,
    mode: cudnnNormMode_t,
    groupCnt: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnNormalizationForwardInference(
    handle: cudnnHandle_t,
    mode: cudnnNormMode_t,
    normOps: cudnnNormOps_t,
    algo: cudnnNormAlgo_t,
    alpha: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    normScaleBiasDesc: cudnnTensorDescriptor_t,
    normScale: *const ::std::os::raw::c_void,
    normBias: *const ::std::os::raw::c_void,
    normMeanVarDesc: cudnnTensorDescriptor_t,
    estimatedMean: *const ::std::os::raw::c_void,
    estimatedVariance: *const ::std::os::raw::c_void,
    zDesc: cudnnTensorDescriptor_t,
    z: *const ::std::os::raw::c_void,
    activationDesc: cudnnActivationDescriptor_t,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    epsilon: f64,
    groupCnt: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateSpatialTransformerDescriptor(
    stDesc: *mut cudnnSpatialTransformerDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetSpatialTransformerNdDescriptor(
    stDesc: cudnnSpatialTransformerDescriptor_t,
    samplerType: cudnnSamplerType_t,
    dataType: cudnnDataType_t,
    nbDims: ::std::os::raw::c_int,
    dimA: *const ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroySpatialTransformerDescriptor(
    stDesc: cudnnSpatialTransformerDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSpatialTfGridGeneratorForward(
    handle: cudnnHandle_t,
    stDesc: cudnnSpatialTransformerDescriptor_t,
    theta: *const ::std::os::raw::c_void,
    grid: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSpatialTfSamplerForward(
    handle: cudnnHandle_t,
    stDesc: cudnnSpatialTransformerDescriptor_t,
    alpha: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    grid: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateDropoutDescriptor(
    dropoutDesc: *mut cudnnDropoutDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyDropoutDescriptor(
    dropoutDesc: cudnnDropoutDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDropoutGetStatesSize(
    handle: cudnnHandle_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDropoutGetReserveSpaceSize(
    xdesc: cudnnTensorDescriptor_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetDropoutDescriptor(
    dropoutDesc: cudnnDropoutDescriptor_t,
    handle: cudnnHandle_t,
    dropout: f32,
    states: *mut ::std::os::raw::c_void,
    stateSizeInBytes: usize,
    seed: ::std::os::raw::c_ulonglong,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRestoreDropoutDescriptor(
    dropoutDesc: cudnnDropoutDescriptor_t,
    handle: cudnnHandle_t,
    dropout: f32,
    states: *mut ::std::os::raw::c_void,
    stateSizeInBytes: usize,
    seed: ::std::os::raw::c_ulonglong,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetDropoutDescriptor(
    dropoutDesc: cudnnDropoutDescriptor_t,
    handle: cudnnHandle_t,
    dropout: *mut f32,
    states: *mut *mut ::std::os::raw::c_void,
    seed: *mut ::std::os::raw::c_ulonglong,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDropoutForward(
    handle: cudnnHandle_t,
    dropoutDesc: cudnnDropoutDescriptor_t,
    xdesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    ydesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateAlgorithmDescriptor(
    algoDesc: *mut cudnnAlgorithmDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetAlgorithmDescriptor(
    algoDesc: cudnnAlgorithmDescriptor_t,
    algorithm: cudnnAlgorithm_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetAlgorithmDescriptor(
    algoDesc: cudnnAlgorithmDescriptor_t,
    algorithm: *mut cudnnAlgorithm_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCopyAlgorithmDescriptor(
    src: cudnnAlgorithmDescriptor_t,
    dest: cudnnAlgorithmDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyAlgorithmDescriptor(
    algoDesc: cudnnAlgorithmDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateAlgorithmPerformance(
    algoPerf: *mut cudnnAlgorithmPerformance_t,
    numberToCreate: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetAlgorithmPerformance(
    algoPerf: cudnnAlgorithmPerformance_t,
    algoDesc: cudnnAlgorithmDescriptor_t,
    status: cudnnStatus_t,
    time: f32,
    memory: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetAlgorithmPerformance(
    algoPerf: cudnnAlgorithmPerformance_t,
    algoDesc: *mut cudnnAlgorithmDescriptor_t,
    status: *mut cudnnStatus_t,
    time: *mut f32,
    memory: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyAlgorithmPerformance(
    algoPerf: *mut cudnnAlgorithmPerformance_t,
    numberToDestroy: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetAlgorithmSpaceSize(
    handle: cudnnHandle_t,
    algoDesc: cudnnAlgorithmDescriptor_t,
    algoSpaceSizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSaveAlgorithm(
    handle: cudnnHandle_t,
    algoDesc: cudnnAlgorithmDescriptor_t,
    algoSpace: *mut ::std::os::raw::c_void,
    algoSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRestoreAlgorithm(
    handle: cudnnHandle_t,
    algoSpace: *mut ::std::os::raw::c_void,
    algoSpaceSizeInBytes: usize,
    algoDesc: cudnnAlgorithmDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetCallback(
    mask: ::std::os::raw::c_uint,
    udata: *mut ::std::os::raw::c_void,
    fptr: cudnnCallback_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetCallback(
    mask: *mut ::std::os::raw::c_uint,
    udata: *mut *mut ::std::os::raw::c_void,
    fptr: *mut cudnnCallback_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnOpsInferVersionCheck() -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSoftmaxBackward(
    handle: cudnnHandle_t,
    algo: cudnnSoftmaxAlgorithm_t,
    mode: cudnnSoftmaxMode_t,
    alpha: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    dxDesc: cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnPoolingBackward(
    handle: cudnnHandle_t,
    poolingDesc: cudnnPoolingDescriptor_t,
    alpha: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    dxDesc: cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnActivationBackward(
    handle: cudnnHandle_t,
    activationDesc: cudnnActivationDescriptor_t,
    alpha: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    dxDesc: cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnLRNCrossChannelBackward(
    handle: cudnnHandle_t,
    normDesc: cudnnLRNDescriptor_t,
    lrnMode: cudnnLRNMode_t,
    alpha: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    dxDesc: cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDivisiveNormalizationBackward(
    handle: cudnnHandle_t,
    normDesc: cudnnLRNDescriptor_t,
    mode: cudnnDivNormMode_t,
    alpha: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    means: *const ::std::os::raw::c_void,
    dy: *const ::std::os::raw::c_void,
    temp: *mut ::std::os::raw::c_void,
    temp2: *mut ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    dXdMeansDesc: cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
    dMeans: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize(
    handle: cudnnHandle_t,
    mode: cudnnBatchNormMode_t,
    bnOps: cudnnBatchNormOps_t,
    xDesc: cudnnTensorDescriptor_t,
    zDesc: cudnnTensorDescriptor_t,
    yDesc: cudnnTensorDescriptor_t,
    bnScaleBiasMeanVarDesc: cudnnTensorDescriptor_t,
    activationDesc: cudnnActivationDescriptor_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetBatchNormalizationBackwardExWorkspaceSize(
    handle: cudnnHandle_t,
    mode: cudnnBatchNormMode_t,
    bnOps: cudnnBatchNormOps_t,
    xDesc: cudnnTensorDescriptor_t,
    yDesc: cudnnTensorDescriptor_t,
    dyDesc: cudnnTensorDescriptor_t,
    dzDesc: cudnnTensorDescriptor_t,
    dxDesc: cudnnTensorDescriptor_t,
    dBnScaleBiasDesc: cudnnTensorDescriptor_t,
    activationDesc: cudnnActivationDescriptor_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetBatchNormalizationTrainingExReserveSpaceSize(
    handle: cudnnHandle_t,
    mode: cudnnBatchNormMode_t,
    bnOps: cudnnBatchNormOps_t,
    activationDesc: cudnnActivationDescriptor_t,
    xDesc: cudnnTensorDescriptor_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBatchNormalizationForwardTraining(
    handle: cudnnHandle_t,
    mode: cudnnBatchNormMode_t,
    alpha: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    bnScaleBiasMeanVarDesc: cudnnTensorDescriptor_t,
    bnScale: *const ::std::os::raw::c_void,
    bnBias: *const ::std::os::raw::c_void,
    exponentialAverageFactor: f64,
    resultRunningMean: *mut ::std::os::raw::c_void,
    resultRunningVariance: *mut ::std::os::raw::c_void,
    epsilon: f64,
    resultSaveMean: *mut ::std::os::raw::c_void,
    resultSaveInvVariance: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBatchNormalizationForwardTrainingEx(
    handle: cudnnHandle_t,
    mode: cudnnBatchNormMode_t,
    bnOps: cudnnBatchNormOps_t,
    alpha: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    xData: *const ::std::os::raw::c_void,
    zDesc: cudnnTensorDescriptor_t,
    zData: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    yData: *mut ::std::os::raw::c_void,
    bnScaleBiasMeanVarDesc: cudnnTensorDescriptor_t,
    bnScale: *const ::std::os::raw::c_void,
    bnBias: *const ::std::os::raw::c_void,
    exponentialAverageFactor: f64,
    resultRunningMean: *mut ::std::os::raw::c_void,
    resultRunningVariance: *mut ::std::os::raw::c_void,
    epsilon: f64,
    resultSaveMean: *mut ::std::os::raw::c_void,
    resultSaveInvVariance: *mut ::std::os::raw::c_void,
    activationDesc: cudnnActivationDescriptor_t,
    workspace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBatchNormalizationBackward(
    handle: cudnnHandle_t,
    mode: cudnnBatchNormMode_t,
    alphaDataDiff: *const ::std::os::raw::c_void,
    betaDataDiff: *const ::std::os::raw::c_void,
    alphaParamDiff: *const ::std::os::raw::c_void,
    betaParamDiff: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    dxDesc: cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
    dBnScaleBiasDesc: cudnnTensorDescriptor_t,
    bnScale: *const ::std::os::raw::c_void,
    dBnScaleResult: *mut ::std::os::raw::c_void,
    dBnBiasResult: *mut ::std::os::raw::c_void,
    epsilon: f64,
    savedMean: *const ::std::os::raw::c_void,
    savedInvVariance: *const ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBatchNormalizationBackwardEx(
    handle: cudnnHandle_t,
    mode: cudnnBatchNormMode_t,
    bnOps: cudnnBatchNormOps_t,
    alphaDataDiff: *const ::std::os::raw::c_void,
    betaDataDiff: *const ::std::os::raw::c_void,
    alphaParamDiff: *const ::std::os::raw::c_void,
    betaParamDiff: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    xData: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    yData: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dyData: *const ::std::os::raw::c_void,
    dzDesc: cudnnTensorDescriptor_t,
    dzData: *mut ::std::os::raw::c_void,
    dxDesc: cudnnTensorDescriptor_t,
    dxData: *mut ::std::os::raw::c_void,
    dBnScaleBiasDesc: cudnnTensorDescriptor_t,
    bnScaleData: *const ::std::os::raw::c_void,
    bnBiasData: *const ::std::os::raw::c_void,
    dBnScaleData: *mut ::std::os::raw::c_void,
    dBnBiasData: *mut ::std::os::raw::c_void,
    epsilon: f64,
    savedMean: *const ::std::os::raw::c_void,
    savedInvVariance: *const ::std::os::raw::c_void,
    activationDesc: cudnnActivationDescriptor_t,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetNormalizationForwardTrainingWorkspaceSize(
    handle: cudnnHandle_t,
    mode: cudnnNormMode_t,
    normOps: cudnnNormOps_t,
    algo: cudnnNormAlgo_t,
    xDesc: cudnnTensorDescriptor_t,
    zDesc: cudnnTensorDescriptor_t,
    yDesc: cudnnTensorDescriptor_t,
    normScaleBiasDesc: cudnnTensorDescriptor_t,
    activationDesc: cudnnActivationDescriptor_t,
    normMeanVarDesc: cudnnTensorDescriptor_t,
    sizeInBytes: *mut usize,
    groupCnt: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetNormalizationBackwardWorkspaceSize(
    handle: cudnnHandle_t,
    mode: cudnnNormMode_t,
    normOps: cudnnNormOps_t,
    algo: cudnnNormAlgo_t,
    xDesc: cudnnTensorDescriptor_t,
    yDesc: cudnnTensorDescriptor_t,
    dyDesc: cudnnTensorDescriptor_t,
    dzDesc: cudnnTensorDescriptor_t,
    dxDesc: cudnnTensorDescriptor_t,
    dNormScaleBiasDesc: cudnnTensorDescriptor_t,
    activationDesc: cudnnActivationDescriptor_t,
    normMeanVarDesc: cudnnTensorDescriptor_t,
    sizeInBytes: *mut usize,
    groupCnt: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetNormalizationTrainingReserveSpaceSize(
    handle: cudnnHandle_t,
    mode: cudnnNormMode_t,
    normOps: cudnnNormOps_t,
    algo: cudnnNormAlgo_t,
    activationDesc: cudnnActivationDescriptor_t,
    xDesc: cudnnTensorDescriptor_t,
    sizeInBytes: *mut usize,
    groupCnt: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnNormalizationForwardTraining(
    handle: cudnnHandle_t,
    mode: cudnnNormMode_t,
    normOps: cudnnNormOps_t,
    algo: cudnnNormAlgo_t,
    alpha: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    xData: *const ::std::os::raw::c_void,
    normScaleBiasDesc: cudnnTensorDescriptor_t,
    normScale: *const ::std::os::raw::c_void,
    normBias: *const ::std::os::raw::c_void,
    exponentialAverageFactor: f64,
    normMeanVarDesc: cudnnTensorDescriptor_t,
    resultRunningMean: *mut ::std::os::raw::c_void,
    resultRunningVariance: *mut ::std::os::raw::c_void,
    epsilon: f64,
    resultSaveMean: *mut ::std::os::raw::c_void,
    resultSaveInvVariance: *mut ::std::os::raw::c_void,
    activationDesc: cudnnActivationDescriptor_t,
    zDesc: cudnnTensorDescriptor_t,
    zData: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    yData: *mut ::std::os::raw::c_void,
    workspace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
    groupCnt: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnNormalizationBackward(
    handle: cudnnHandle_t,
    mode: cudnnNormMode_t,
    normOps: cudnnNormOps_t,
    algo: cudnnNormAlgo_t,
    alphaDataDiff: *const ::std::os::raw::c_void,
    betaDataDiff: *const ::std::os::raw::c_void,
    alphaParamDiff: *const ::std::os::raw::c_void,
    betaParamDiff: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    xData: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    yData: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dyData: *const ::std::os::raw::c_void,
    dzDesc: cudnnTensorDescriptor_t,
    dzData: *mut ::std::os::raw::c_void,
    dxDesc: cudnnTensorDescriptor_t,
    dxData: *mut ::std::os::raw::c_void,
    dNormScaleBiasDesc: cudnnTensorDescriptor_t,
    normScaleData: *const ::std::os::raw::c_void,
    normBiasData: *const ::std::os::raw::c_void,
    dNormScaleData: *mut ::std::os::raw::c_void,
    dNormBiasData: *mut ::std::os::raw::c_void,
    epsilon: f64,
    normMeanVarDesc: cudnnTensorDescriptor_t,
    savedMean: *const ::std::os::raw::c_void,
    savedInvVariance: *const ::std::os::raw::c_void,
    activationDesc: cudnnActivationDescriptor_t,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
    groupCnt: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSpatialTfGridGeneratorBackward(
    handle: cudnnHandle_t,
    stDesc: cudnnSpatialTransformerDescriptor_t,
    dgrid: *const ::std::os::raw::c_void,
    dtheta: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSpatialTfSamplerBackward(
    handle: cudnnHandle_t,
    stDesc: cudnnSpatialTransformerDescriptor_t,
    alpha: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    dxDesc: cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
    alphaDgrid: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    grid: *const ::std::os::raw::c_void,
    betaDgrid: *const ::std::os::raw::c_void,
    dgrid: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDropoutBackward(
    handle: cudnnHandle_t,
    dropoutDesc: cudnnDropoutDescriptor_t,
    dydesc: cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    dxdesc: cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnOpsTrainVersionCheck() -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateRNNDescriptor(
    rnnDesc: *mut cudnnRNNDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyRNNDescriptor(
    rnnDesc: cudnnRNNDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetRNNDescriptor_v8(
    rnnDesc: cudnnRNNDescriptor_t,
    algo: cudnnRNNAlgo_t,
    cellMode: cudnnRNNMode_t,
    biasMode: cudnnRNNBiasMode_t,
    dirMode: cudnnDirectionMode_t,
    inputMode: cudnnRNNInputMode_t,
    dataType: cudnnDataType_t,
    mathPrec: cudnnDataType_t,
    mathType: cudnnMathType_t,
    inputSize: i32,
    hiddenSize: i32,
    projSize: i32,
    numLayers: i32,
    dropoutDesc: cudnnDropoutDescriptor_t,
    auxFlags: u32,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNDescriptor_v8(
    rnnDesc: cudnnRNNDescriptor_t,
    algo: *mut cudnnRNNAlgo_t,
    cellMode: *mut cudnnRNNMode_t,
    biasMode: *mut cudnnRNNBiasMode_t,
    dirMode: *mut cudnnDirectionMode_t,
    inputMode: *mut cudnnRNNInputMode_t,
    dataType: *mut cudnnDataType_t,
    mathPrec: *mut cudnnDataType_t,
    mathType: *mut cudnnMathType_t,
    inputSize: *mut i32,
    hiddenSize: *mut i32,
    projSize: *mut i32,
    numLayers: *mut i32,
    dropoutDesc: *mut cudnnDropoutDescriptor_t,
    auxFlags: *mut u32,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetRNNDescriptor_v6(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    hiddenSize: ::std::os::raw::c_int,
    numLayers: ::std::os::raw::c_int,
    dropoutDesc: cudnnDropoutDescriptor_t,
    inputMode: cudnnRNNInputMode_t,
    direction: cudnnDirectionMode_t,
    cellMode: cudnnRNNMode_t,
    algo: cudnnRNNAlgo_t,
    mathPrec: cudnnDataType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNDescriptor_v6(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    hiddenSize: *mut ::std::os::raw::c_int,
    numLayers: *mut ::std::os::raw::c_int,
    dropoutDesc: *mut cudnnDropoutDescriptor_t,
    inputMode: *mut cudnnRNNInputMode_t,
    direction: *mut cudnnDirectionMode_t,
    cellMode: *mut cudnnRNNMode_t,
    algo: *mut cudnnRNNAlgo_t,
    mathPrec: *mut cudnnDataType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetRNNMatrixMathType(
    rnnDesc: cudnnRNNDescriptor_t,
    mType: cudnnMathType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNMatrixMathType(
    rnnDesc: cudnnRNNDescriptor_t,
    mType: *mut cudnnMathType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetRNNBiasMode(
    rnnDesc: cudnnRNNDescriptor_t,
    biasMode: cudnnRNNBiasMode_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNBiasMode(
    rnnDesc: cudnnRNNDescriptor_t,
    biasMode: *mut cudnnRNNBiasMode_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNSetClip_v8(
    rnnDesc: cudnnRNNDescriptor_t,
    clipMode: cudnnRNNClipMode_t,
    clipNanOpt: cudnnNanPropagation_t,
    lclip: f64,
    rclip: f64,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNGetClip_v8(
    rnnDesc: cudnnRNNDescriptor_t,
    clipMode: *mut cudnnRNNClipMode_t,
    clipNanOpt: *mut cudnnNanPropagation_t,
    lclip: *mut f64,
    rclip: *mut f64,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNSetClip(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    clipMode: cudnnRNNClipMode_t,
    clipNanOpt: cudnnNanPropagation_t,
    lclip: f64,
    rclip: f64,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNGetClip(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    clipMode: *mut cudnnRNNClipMode_t,
    clipNanOpt: *mut cudnnNanPropagation_t,
    lclip: *mut f64,
    rclip: *mut f64,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetRNNProjectionLayers(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    recProjSize: ::std::os::raw::c_int,
    outProjSize: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNProjectionLayers(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    recProjSize: *mut ::std::os::raw::c_int,
    outProjSize: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreatePersistentRNNPlan(
    rnnDesc: cudnnRNNDescriptor_t,
    minibatch: ::std::os::raw::c_int,
    dataType: cudnnDataType_t,
    plan: *mut cudnnPersistentRNNPlan_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyPersistentRNNPlan(
    plan: cudnnPersistentRNNPlan_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetPersistentRNNPlan(
    rnnDesc: cudnnRNNDescriptor_t,
    plan: cudnnPersistentRNNPlan_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBuildRNNDynamic(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    miniBatch: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNWorkspaceSize(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    seqLength: ::std::os::raw::c_int,
    xDesc: *const cudnnTensorDescriptor_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNTrainingReserveSize(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    seqLength: ::std::os::raw::c_int,
    xDesc: *const cudnnTensorDescriptor_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNTempSpaceSizes(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    fwdMode: cudnnForwardMode_t,
    xDesc: cudnnRNNDataDescriptor_t,
    workSpaceSize: *mut usize,
    reserveSpaceSize: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNParamsSize(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    xDesc: cudnnTensorDescriptor_t,
    sizeInBytes: *mut usize,
    dataType: cudnnDataType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNWeightSpaceSize(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    weightSpaceSize: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNLinLayerMatrixParams(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    pseudoLayer: ::std::os::raw::c_int,
    xDesc: cudnnTensorDescriptor_t,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    linLayerID: ::std::os::raw::c_int,
    linLayerMatDesc: cudnnFilterDescriptor_t,
    linLayerMat: *mut *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNLinLayerBiasParams(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    pseudoLayer: ::std::os::raw::c_int,
    xDesc: cudnnTensorDescriptor_t,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    linLayerID: ::std::os::raw::c_int,
    linLayerBiasDesc: cudnnFilterDescriptor_t,
    linLayerBias: *mut *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNWeightParams(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    pseudoLayer: i32,
    weightSpaceSize: usize,
    weightSpace: *const ::std::os::raw::c_void,
    linLayerID: i32,
    mDesc: cudnnTensorDescriptor_t,
    mAddr: *mut *mut ::std::os::raw::c_void,
    bDesc: cudnnTensorDescriptor_t,
    bAddr: *mut *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNForwardInference(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    seqLength: ::std::os::raw::c_int,
    xDesc: *const cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    cxDesc: cudnnTensorDescriptor_t,
    cx: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    yDesc: *const cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    hyDesc: cudnnTensorDescriptor_t,
    hy: *mut ::std::os::raw::c_void,
    cyDesc: cudnnTensorDescriptor_t,
    cy: *mut ::std::os::raw::c_void,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetRNNPaddingMode(
    rnnDesc: cudnnRNNDescriptor_t,
    paddingMode: ::std::os::raw::c_uint,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNPaddingMode(
    rnnDesc: cudnnRNNDescriptor_t,
    paddingMode: *mut ::std::os::raw::c_uint,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateRNNDataDescriptor(
    rnnDataDesc: *mut cudnnRNNDataDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyRNNDataDescriptor(
    rnnDataDesc: cudnnRNNDataDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetRNNDataDescriptor(
    rnnDataDesc: cudnnRNNDataDescriptor_t,
    dataType: cudnnDataType_t,
    layout: cudnnRNNDataLayout_t,
    maxSeqLength: ::std::os::raw::c_int,
    batchSize: ::std::os::raw::c_int,
    vectorSize: ::std::os::raw::c_int,
    seqLengthArray: *const ::std::os::raw::c_int,
    paddingFill: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNDataDescriptor(
    rnnDataDesc: cudnnRNNDataDescriptor_t,
    dataType: *mut cudnnDataType_t,
    layout: *mut cudnnRNNDataLayout_t,
    maxSeqLength: *mut ::std::os::raw::c_int,
    batchSize: *mut ::std::os::raw::c_int,
    vectorSize: *mut ::std::os::raw::c_int,
    arrayLengthRequested: ::std::os::raw::c_int,
    seqLengthArray: *mut ::std::os::raw::c_int,
    paddingFill: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNForwardInferenceEx(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    xDesc: cudnnRNNDataDescriptor_t,
    x: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    cxDesc: cudnnTensorDescriptor_t,
    cx: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    yDesc: cudnnRNNDataDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    hyDesc: cudnnTensorDescriptor_t,
    hy: *mut ::std::os::raw::c_void,
    cyDesc: cudnnTensorDescriptor_t,
    cy: *mut ::std::os::raw::c_void,
    kDesc: cudnnRNNDataDescriptor_t,
    keys: *const ::std::os::raw::c_void,
    cDesc: cudnnRNNDataDescriptor_t,
    cAttn: *mut ::std::os::raw::c_void,
    iDesc: cudnnRNNDataDescriptor_t,
    iAttn: *mut ::std::os::raw::c_void,
    qDesc: cudnnRNNDataDescriptor_t,
    queries: *mut ::std::os::raw::c_void,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNForward(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    fwdMode: cudnnForwardMode_t,
    devSeqLengths: *const i32,
    xDesc: cudnnRNNDataDescriptor_t,
    x: *const ::std::os::raw::c_void,
    yDesc: cudnnRNNDataDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    hDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    hy: *mut ::std::os::raw::c_void,
    cDesc: cudnnTensorDescriptor_t,
    cx: *const ::std::os::raw::c_void,
    cy: *mut ::std::os::raw::c_void,
    weightSpaceSize: usize,
    weightSpace: *const ::std::os::raw::c_void,
    workSpaceSize: usize,
    workSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSize: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetRNNAlgorithmDescriptor(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    algoDesc: cudnnAlgorithmDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNForwardInferenceAlgorithmMaxCount(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    count: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnFindRNNForwardInferenceAlgorithmEx(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    seqLength: ::std::os::raw::c_int,
    xDesc: *const cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    cxDesc: cudnnTensorDescriptor_t,
    cx: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    yDesc: *const cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    hyDesc: cudnnTensorDescriptor_t,
    hy: *mut ::std::os::raw::c_void,
    cyDesc: cudnnTensorDescriptor_t,
    cy: *mut ::std::os::raw::c_void,
    findIntensity: f32,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnAlgorithmPerformance_t,
    workspace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateSeqDataDescriptor(
    seqDataDesc: *mut cudnnSeqDataDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroySeqDataDescriptor(
    seqDataDesc: cudnnSeqDataDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetSeqDataDescriptor(
    seqDataDesc: cudnnSeqDataDescriptor_t,
    dataType: cudnnDataType_t,
    nbDims: ::std::os::raw::c_int,
    dimA: *const ::std::os::raw::c_int,
    axes: *const cudnnSeqDataAxis_t,
    seqLengthArraySize: usize,
    seqLengthArray: *const ::std::os::raw::c_int,
    paddingFill: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetSeqDataDescriptor(
    seqDataDesc: cudnnSeqDataDescriptor_t,
    dataType: *mut cudnnDataType_t,
    nbDims: *mut ::std::os::raw::c_int,
    nbDimsRequested: ::std::os::raw::c_int,
    dimA: *mut ::std::os::raw::c_int,
    axes: *mut cudnnSeqDataAxis_t,
    seqLengthArraySize: *mut usize,
    seqLengthSizeRequested: usize,
    seqLengthArray: *mut ::std::os::raw::c_int,
    paddingFill: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateAttnDescriptor(
    attnDesc: *mut cudnnAttnDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyAttnDescriptor(
    attnDesc: cudnnAttnDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetAttnDescriptor(
    attnDesc: cudnnAttnDescriptor_t,
    attnMode: ::std::os::raw::c_uint,
    nHeads: ::std::os::raw::c_int,
    smScaler: f64,
    dataType: cudnnDataType_t,
    computePrec: cudnnDataType_t,
    mathType: cudnnMathType_t,
    attnDropoutDesc: cudnnDropoutDescriptor_t,
    postDropoutDesc: cudnnDropoutDescriptor_t,
    qSize: ::std::os::raw::c_int,
    kSize: ::std::os::raw::c_int,
    vSize: ::std::os::raw::c_int,
    qProjSize: ::std::os::raw::c_int,
    kProjSize: ::std::os::raw::c_int,
    vProjSize: ::std::os::raw::c_int,
    oProjSize: ::std::os::raw::c_int,
    qoMaxSeqLength: ::std::os::raw::c_int,
    kvMaxSeqLength: ::std::os::raw::c_int,
    maxBatchSize: ::std::os::raw::c_int,
    maxBeamSize: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetAttnDescriptor(
    attnDesc: cudnnAttnDescriptor_t,
    attnMode: *mut ::std::os::raw::c_uint,
    nHeads: *mut ::std::os::raw::c_int,
    smScaler: *mut f64,
    dataType: *mut cudnnDataType_t,
    computePrec: *mut cudnnDataType_t,
    mathType: *mut cudnnMathType_t,
    attnDropoutDesc: *mut cudnnDropoutDescriptor_t,
    postDropoutDesc: *mut cudnnDropoutDescriptor_t,
    qSize: *mut ::std::os::raw::c_int,
    kSize: *mut ::std::os::raw::c_int,
    vSize: *mut ::std::os::raw::c_int,
    qProjSize: *mut ::std::os::raw::c_int,
    kProjSize: *mut ::std::os::raw::c_int,
    vProjSize: *mut ::std::os::raw::c_int,
    oProjSize: *mut ::std::os::raw::c_int,
    qoMaxSeqLength: *mut ::std::os::raw::c_int,
    kvMaxSeqLength: *mut ::std::os::raw::c_int,
    maxBatchSize: *mut ::std::os::raw::c_int,
    maxBeamSize: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetMultiHeadAttnBuffers(
    handle: cudnnHandle_t,
    attnDesc: cudnnAttnDescriptor_t,
    weightSizeInBytes: *mut usize,
    workSpaceSizeInBytes: *mut usize,
    reserveSpaceSizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetMultiHeadAttnWeights(
    handle: cudnnHandle_t,
    attnDesc: cudnnAttnDescriptor_t,
    wKind: cudnnMultiHeadAttnWeightKind_t,
    weightSizeInBytes: usize,
    weights: *const ::std::os::raw::c_void,
    wDesc: cudnnTensorDescriptor_t,
    wAddr: *mut *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnMultiHeadAttnForward(
    handle: cudnnHandle_t,
    attnDesc: cudnnAttnDescriptor_t,
    currIdx: ::std::os::raw::c_int,
    loWinIdx: *const ::std::os::raw::c_int,
    hiWinIdx: *const ::std::os::raw::c_int,
    devSeqLengthsQO: *const ::std::os::raw::c_int,
    devSeqLengthsKV: *const ::std::os::raw::c_int,
    qDesc: cudnnSeqDataDescriptor_t,
    queries: *const ::std::os::raw::c_void,
    residuals: *const ::std::os::raw::c_void,
    kDesc: cudnnSeqDataDescriptor_t,
    keys: *const ::std::os::raw::c_void,
    vDesc: cudnnSeqDataDescriptor_t,
    values: *const ::std::os::raw::c_void,
    oDesc: cudnnSeqDataDescriptor_t,
    out: *mut ::std::os::raw::c_void,
    weightSizeInBytes: usize,
    weights: *const ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    workSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnAdvInferVersionCheck() -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNForwardTraining(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    seqLength: ::std::os::raw::c_int,
    xDesc: *const cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    cxDesc: cudnnTensorDescriptor_t,
    cx: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    yDesc: *const cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    hyDesc: cudnnTensorDescriptor_t,
    hy: *mut ::std::os::raw::c_void,
    cyDesc: cudnnTensorDescriptor_t,
    cy: *mut ::std::os::raw::c_void,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNBackwardData(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    seqLength: ::std::os::raw::c_int,
    yDesc: *const cudnnTensorDescriptor_t,
    y: *const ::std::os::raw::c_void,
    dyDesc: *const cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    dhyDesc: cudnnTensorDescriptor_t,
    dhy: *const ::std::os::raw::c_void,
    dcyDesc: cudnnTensorDescriptor_t,
    dcy: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    cxDesc: cudnnTensorDescriptor_t,
    cx: *const ::std::os::raw::c_void,
    dxDesc: *const cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
    dhxDesc: cudnnTensorDescriptor_t,
    dhx: *mut ::std::os::raw::c_void,
    dcxDesc: cudnnTensorDescriptor_t,
    dcx: *mut ::std::os::raw::c_void,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNBackwardData_v8(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    devSeqLengths: *const i32,
    yDesc: cudnnRNNDataDescriptor_t,
    y: *const ::std::os::raw::c_void,
    dy: *const ::std::os::raw::c_void,
    xDesc: cudnnRNNDataDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
    hDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    dhy: *const ::std::os::raw::c_void,
    dhx: *mut ::std::os::raw::c_void,
    cDesc: cudnnTensorDescriptor_t,
    cx: *const ::std::os::raw::c_void,
    dcy: *const ::std::os::raw::c_void,
    dcx: *mut ::std::os::raw::c_void,
    weightSpaceSize: usize,
    weightSpace: *const ::std::os::raw::c_void,
    workSpaceSize: usize,
    workSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSize: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNBackwardWeights(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    seqLength: ::std::os::raw::c_int,
    xDesc: *const cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    yDesc: *const cudnnTensorDescriptor_t,
    y: *const ::std::os::raw::c_void,
    workSpace: *const ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    dwDesc: cudnnFilterDescriptor_t,
    dw: *mut ::std::os::raw::c_void,
    reserveSpace: *const ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNBackwardWeights_v8(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    addGrad: cudnnWgradMode_t,
    devSeqLengths: *const i32,
    xDesc: cudnnRNNDataDescriptor_t,
    x: *const ::std::os::raw::c_void,
    hDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    yDesc: cudnnRNNDataDescriptor_t,
    y: *const ::std::os::raw::c_void,
    weightSpaceSize: usize,
    dweightSpace: *mut ::std::os::raw::c_void,
    workSpaceSize: usize,
    workSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSize: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNForwardTrainingEx(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    xDesc: cudnnRNNDataDescriptor_t,
    x: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    cxDesc: cudnnTensorDescriptor_t,
    cx: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    yDesc: cudnnRNNDataDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    hyDesc: cudnnTensorDescriptor_t,
    hy: *mut ::std::os::raw::c_void,
    cyDesc: cudnnTensorDescriptor_t,
    cy: *mut ::std::os::raw::c_void,
    kDesc: cudnnRNNDataDescriptor_t,
    keys: *const ::std::os::raw::c_void,
    cDesc: cudnnRNNDataDescriptor_t,
    cAttn: *mut ::std::os::raw::c_void,
    iDesc: cudnnRNNDataDescriptor_t,
    iAttn: *mut ::std::os::raw::c_void,
    qDesc: cudnnRNNDataDescriptor_t,
    queries: *mut ::std::os::raw::c_void,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNBackwardDataEx(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    yDesc: cudnnRNNDataDescriptor_t,
    y: *const ::std::os::raw::c_void,
    dyDesc: cudnnRNNDataDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    dcDesc: cudnnRNNDataDescriptor_t,
    dcAttn: *const ::std::os::raw::c_void,
    dhyDesc: cudnnTensorDescriptor_t,
    dhy: *const ::std::os::raw::c_void,
    dcyDesc: cudnnTensorDescriptor_t,
    dcy: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    cxDesc: cudnnTensorDescriptor_t,
    cx: *const ::std::os::raw::c_void,
    dxDesc: cudnnRNNDataDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
    dhxDesc: cudnnTensorDescriptor_t,
    dhx: *mut ::std::os::raw::c_void,
    dcxDesc: cudnnTensorDescriptor_t,
    dcx: *mut ::std::os::raw::c_void,
    dkDesc: cudnnRNNDataDescriptor_t,
    dkeys: *mut ::std::os::raw::c_void,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnRNNBackwardWeightsEx(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    xDesc: cudnnRNNDataDescriptor_t,
    x: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    yDesc: cudnnRNNDataDescriptor_t,
    y: *const ::std::os::raw::c_void,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    dwDesc: cudnnFilterDescriptor_t,
    dw: *mut ::std::os::raw::c_void,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNForwardTrainingAlgorithmMaxCount(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    count: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnFindRNNForwardTrainingAlgorithmEx(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    seqLength: ::std::os::raw::c_int,
    xDesc: *const cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    cxDesc: cudnnTensorDescriptor_t,
    cx: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    yDesc: *const cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    hyDesc: cudnnTensorDescriptor_t,
    hy: *mut ::std::os::raw::c_void,
    cyDesc: cudnnTensorDescriptor_t,
    cy: *mut ::std::os::raw::c_void,
    findIntensity: f32,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnAlgorithmPerformance_t,
    workspace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNBackwardDataAlgorithmMaxCount(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    count: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnFindRNNBackwardDataAlgorithmEx(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    seqLength: ::std::os::raw::c_int,
    yDesc: *const cudnnTensorDescriptor_t,
    y: *const ::std::os::raw::c_void,
    dyDesc: *const cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    dhyDesc: cudnnTensorDescriptor_t,
    dhy: *const ::std::os::raw::c_void,
    dcyDesc: cudnnTensorDescriptor_t,
    dcy: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    cxDesc: cudnnTensorDescriptor_t,
    cx: *const ::std::os::raw::c_void,
    dxDesc: *const cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
    dhxDesc: cudnnTensorDescriptor_t,
    dhx: *mut ::std::os::raw::c_void,
    dcxDesc: cudnnTensorDescriptor_t,
    dcx: *mut ::std::os::raw::c_void,
    findIntensity: f32,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnAlgorithmPerformance_t,
    workspace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetRNNBackwardWeightsAlgorithmMaxCount(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    count: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnFindRNNBackwardWeightsAlgorithmEx(
    handle: cudnnHandle_t,
    rnnDesc: cudnnRNNDescriptor_t,
    seqLength: ::std::os::raw::c_int,
    xDesc: *const cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    hxDesc: cudnnTensorDescriptor_t,
    hx: *const ::std::os::raw::c_void,
    yDesc: *const cudnnTensorDescriptor_t,
    y: *const ::std::os::raw::c_void,
    findIntensity: f32,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnAlgorithmPerformance_t,
    workspace: *const ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    dwDesc: cudnnFilterDescriptor_t,
    dw: *mut ::std::os::raw::c_void,
    reserveSpace: *const ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnMultiHeadAttnBackwardData(
    handle: cudnnHandle_t,
    attnDesc: cudnnAttnDescriptor_t,
    loWinIdx: *const ::std::os::raw::c_int,
    hiWinIdx: *const ::std::os::raw::c_int,
    devSeqLengthsDQDO: *const ::std::os::raw::c_int,
    devSeqLengthsDKDV: *const ::std::os::raw::c_int,
    doDesc: cudnnSeqDataDescriptor_t,
    dout: *const ::std::os::raw::c_void,
    dqDesc: cudnnSeqDataDescriptor_t,
    dqueries: *mut ::std::os::raw::c_void,
    queries: *const ::std::os::raw::c_void,
    dkDesc: cudnnSeqDataDescriptor_t,
    dkeys: *mut ::std::os::raw::c_void,
    keys: *const ::std::os::raw::c_void,
    dvDesc: cudnnSeqDataDescriptor_t,
    dvalues: *mut ::std::os::raw::c_void,
    values: *const ::std::os::raw::c_void,
    weightSizeInBytes: usize,
    weights: *const ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    workSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnMultiHeadAttnBackwardWeights(
    handle: cudnnHandle_t,
    attnDesc: cudnnAttnDescriptor_t,
    addGrad: cudnnWgradMode_t,
    qDesc: cudnnSeqDataDescriptor_t,
    queries: *const ::std::os::raw::c_void,
    kDesc: cudnnSeqDataDescriptor_t,
    keys: *const ::std::os::raw::c_void,
    vDesc: cudnnSeqDataDescriptor_t,
    values: *const ::std::os::raw::c_void,
    doDesc: cudnnSeqDataDescriptor_t,
    dout: *const ::std::os::raw::c_void,
    weightSizeInBytes: usize,
    weights: *const ::std::os::raw::c_void,
    dweights: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    workSpace: *mut ::std::os::raw::c_void,
    reserveSpaceSizeInBytes: usize,
    reserveSpace: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateCTCLossDescriptor(
    ctcLossDesc: *mut cudnnCTCLossDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetCTCLossDescriptor(
    ctcLossDesc: cudnnCTCLossDescriptor_t,
    compType: cudnnDataType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetCTCLossDescriptorEx(
    ctcLossDesc: cudnnCTCLossDescriptor_t,
    compType: cudnnDataType_t,
    normMode: cudnnLossNormalizationMode_t,
    gradMode: cudnnNanPropagation_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetCTCLossDescriptor_v8(
    ctcLossDesc: cudnnCTCLossDescriptor_t,
    compType: cudnnDataType_t,
    normMode: cudnnLossNormalizationMode_t,
    gradMode: cudnnNanPropagation_t,
    maxLabelLength: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetCTCLossDescriptor(
    ctcLossDesc: cudnnCTCLossDescriptor_t,
    compType: *mut cudnnDataType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetCTCLossDescriptorEx(
    ctcLossDesc: cudnnCTCLossDescriptor_t,
    compType: *mut cudnnDataType_t,
    normMode: *mut cudnnLossNormalizationMode_t,
    gradMode: *mut cudnnNanPropagation_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetCTCLossDescriptor_v8(
    ctcLossDesc: cudnnCTCLossDescriptor_t,
    compType: *mut cudnnDataType_t,
    normMode: *mut cudnnLossNormalizationMode_t,
    gradMode: *mut cudnnNanPropagation_t,
    maxLabelLength: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyCTCLossDescriptor(
    ctcLossDesc: cudnnCTCLossDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCTCLoss(
    handle: cudnnHandle_t,
    probsDesc: cudnnTensorDescriptor_t,
    probs: *const ::std::os::raw::c_void,
    hostLabels: *const ::std::os::raw::c_int,
    hostLabelLengths: *const ::std::os::raw::c_int,
    hostInputLengths: *const ::std::os::raw::c_int,
    costs: *mut ::std::os::raw::c_void,
    gradientsDesc: cudnnTensorDescriptor_t,
    gradients: *mut ::std::os::raw::c_void,
    algo: cudnnCTCLossAlgo_t,
    ctcLossDesc: cudnnCTCLossDescriptor_t,
    workspace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCTCLoss_v8(
    handle: cudnnHandle_t,
    algo: cudnnCTCLossAlgo_t,
    ctcLossDesc: cudnnCTCLossDescriptor_t,
    probsDesc: cudnnTensorDescriptor_t,
    probs: *const ::std::os::raw::c_void,
    labels: *const ::std::os::raw::c_int,
    labelLengths: *const ::std::os::raw::c_int,
    inputLengths: *const ::std::os::raw::c_int,
    costs: *mut ::std::os::raw::c_void,
    gradientsDesc: cudnnTensorDescriptor_t,
    gradients: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    workspace: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetCTCLossWorkspaceSize(
    handle: cudnnHandle_t,
    probsDesc: cudnnTensorDescriptor_t,
    gradientsDesc: cudnnTensorDescriptor_t,
    labels: *const ::std::os::raw::c_int,
    labelLengths: *const ::std::os::raw::c_int,
    inputLengths: *const ::std::os::raw::c_int,
    algo: cudnnCTCLossAlgo_t,
    ctcLossDesc: cudnnCTCLossDescriptor_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetCTCLossWorkspaceSize_v8(
    handle: cudnnHandle_t,
    algo: cudnnCTCLossAlgo_t,
    ctcLossDesc: cudnnCTCLossDescriptor_t,
    probsDesc: cudnnTensorDescriptor_t,
    gradientsDesc: cudnnTensorDescriptor_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnAdvTrainVersionCheck() -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateConvolutionDescriptor(
    convDesc: *mut cudnnConvolutionDescriptor_t,
) -> cudnnStatus_t {
    crate::cudnn_create_convolution_descriptor(convDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyConvolutionDescriptor(
    convDesc: cudnnConvolutionDescriptor_t,
) -> cudnnStatus_t {
    crate::destroy_convolution_descriptor(convDesc)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetConvolutionMathType(
    convDesc: cudnnConvolutionDescriptor_t,
    mathType: cudnnMathType_t,
) -> cudnnStatus_t {
    crate::set_convolution_math_type(convDesc, mathType)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionMathType(
    convDesc: cudnnConvolutionDescriptor_t,
    mathType: *mut cudnnMathType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetConvolutionGroupCount(
    convDesc: cudnnConvolutionDescriptor_t,
    groupCount: ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::set_convolution_group_count(convDesc, groupCount)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionGroupCount(
    convDesc: cudnnConvolutionDescriptor_t,
    groupCount: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetConvolutionReorderType(
    convDesc: cudnnConvolutionDescriptor_t,
    reorderType: cudnnReorderType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionReorderType(
    convDesc: cudnnConvolutionDescriptor_t,
    reorderType: *mut cudnnReorderType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetConvolution2dDescriptor(
    convDesc: cudnnConvolutionDescriptor_t,
    pad_h: ::std::os::raw::c_int,
    pad_w: ::std::os::raw::c_int,
    u: ::std::os::raw::c_int,
    v: ::std::os::raw::c_int,
    dilation_h: ::std::os::raw::c_int,
    dilation_w: ::std::os::raw::c_int,
    mode: cudnnConvolutionMode_t,
    computeType: cudnnDataType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolution2dDescriptor(
    convDesc: cudnnConvolutionDescriptor_t,
    pad_h: *mut ::std::os::raw::c_int,
    pad_w: *mut ::std::os::raw::c_int,
    u: *mut ::std::os::raw::c_int,
    v: *mut ::std::os::raw::c_int,
    dilation_h: *mut ::std::os::raw::c_int,
    dilation_w: *mut ::std::os::raw::c_int,
    mode: *mut cudnnConvolutionMode_t,
    computeType: *mut cudnnDataType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetConvolutionNdDescriptor(
    convDesc: cudnnConvolutionDescriptor_t,
    arrayLength: ::std::os::raw::c_int,
    padA: *const ::std::os::raw::c_int,
    filterStrideA: *const ::std::os::raw::c_int,
    dilationA: *const ::std::os::raw::c_int,
    mode: cudnnConvolutionMode_t,
    computeType: cudnnDataType_t,
) -> cudnnStatus_t {
    crate::set_convolution_nd_descriptor(
        convDesc,
        arrayLength,
        padA,
        filterStrideA,
        dilationA,
        mode,
        computeType,
    )
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionNdDescriptor(
    convDesc: cudnnConvolutionDescriptor_t,
    arrayLengthRequested: ::std::os::raw::c_int,
    arrayLength: *mut ::std::os::raw::c_int,
    padA: *mut ::std::os::raw::c_int,
    strideA: *mut ::std::os::raw::c_int,
    dilationA: *mut ::std::os::raw::c_int,
    mode: *mut cudnnConvolutionMode_t,
    computeType: *mut cudnnDataType_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolution2dForwardOutputDim(
    convDesc: cudnnConvolutionDescriptor_t,
    inputTensorDesc: cudnnTensorDescriptor_t,
    filterDesc: cudnnFilterDescriptor_t,
    n: *mut ::std::os::raw::c_int,
    c: *mut ::std::os::raw::c_int,
    h: *mut ::std::os::raw::c_int,
    w: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionNdForwardOutputDim(
    convDesc: cudnnConvolutionDescriptor_t,
    inputTensorDesc: cudnnTensorDescriptor_t,
    filterDesc: cudnnFilterDescriptor_t,
    nbDims: ::std::os::raw::c_int,
    tensorOuputDimA: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::get_convolution_nd_forward_output_dim(
        convDesc,
        inputTensorDesc,
        filterDesc,
        nbDims,
        tensorOuputDimA,
    )
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionForwardAlgorithmMaxCount(
    handle: cudnnHandle_t,
    count: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionForwardAlgorithm_v7(
    handle: cudnnHandle_t,
    srcDesc: cudnnTensorDescriptor_t,
    filterDesc: cudnnFilterDescriptor_t,
    convDesc: cudnnConvolutionDescriptor_t,
    destDesc: cudnnTensorDescriptor_t,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnConvolutionFwdAlgoPerf_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnFindConvolutionForwardAlgorithm(
    handle: cudnnHandle_t,
    xDesc: cudnnTensorDescriptor_t,
    wDesc: cudnnFilterDescriptor_t,
    convDesc: cudnnConvolutionDescriptor_t,
    yDesc: cudnnTensorDescriptor_t,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnConvolutionFwdAlgoPerf_t,
) -> cudnnStatus_t {
    crate::find_convolution_forward_algorithm(
        handle,
        xDesc,
        wDesc,
        convDesc,
        yDesc,
        requestedAlgoCount,
        returnedAlgoCount,
        perfResults,
    )
}

#[no_mangle]
pub unsafe extern "system" fn cudnnFindConvolutionForwardAlgorithmEx(
    handle: cudnnHandle_t,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    convDesc: cudnnConvolutionDescriptor_t,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnConvolutionFwdAlgoPerf_t,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::find_convolution_forward_algorithm_ex(
        handle,
        xDesc,
        x,
        wDesc,
        w,
        convDesc,
        yDesc,
        y,
        requestedAlgoCount,
        returnedAlgoCount,
        perfResults,
        workSpace,
        workSpaceSizeInBytes
    )
}

#[no_mangle]
pub unsafe extern "system" fn cudnnIm2Col(
    handle: cudnnHandle_t,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    convDesc: cudnnConvolutionDescriptor_t,
    colBuffer: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnReorderFilterAndBias(
    handle: cudnnHandle_t,
    filterDesc: cudnnFilterDescriptor_t,
    reorderType: cudnnReorderType_t,
    filterData: *const ::std::os::raw::c_void,
    reorderedFilterData: *mut ::std::os::raw::c_void,
    reorderBias: ::std::os::raw::c_int,
    biasData: *const ::std::os::raw::c_void,
    reorderedBiasData: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionForwardWorkspaceSize(
    handle: cudnnHandle_t,
    xDesc: cudnnTensorDescriptor_t,
    wDesc: cudnnFilterDescriptor_t,
    convDesc: cudnnConvolutionDescriptor_t,
    yDesc: cudnnTensorDescriptor_t,
    algo: cudnnConvolutionFwdAlgo_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::get_convolution_forward_workspace_size(
        handle,
        xDesc,
        wDesc,
        convDesc,
        yDesc,
        algo,
        sizeInBytes,
    )
}

#[no_mangle]
pub unsafe extern "system" fn cudnnConvolutionForward(
    handle: cudnnHandle_t,
    alpha: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    convDesc: cudnnConvolutionDescriptor_t,
    algo: cudnnConvolutionFwdAlgo_t,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    beta: *const ::std::os::raw::c_void,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::convolution_forward(
        handle,
        alpha,
        xDesc,
        x,
        wDesc,
        w,
        convDesc,
        algo,
        workSpace,
        workSpaceSizeInBytes,
        beta,
        yDesc,
        y,
    )
}

#[no_mangle]
pub unsafe extern "system" fn cudnnConvolutionBiasActivationForward(
    handle: cudnnHandle_t,
    alpha1: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    convDesc: cudnnConvolutionDescriptor_t,
    algo: cudnnConvolutionFwdAlgo_t,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    alpha2: *const ::std::os::raw::c_void,
    zDesc: cudnnTensorDescriptor_t,
    z: *const ::std::os::raw::c_void,
    biasDesc: cudnnTensorDescriptor_t,
    bias: *const ::std::os::raw::c_void,
    activationDesc: cudnnActivationDescriptor_t,
    yDesc: cudnnTensorDescriptor_t,
    y: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionBackwardDataAlgorithmMaxCount(
    handle: cudnnHandle_t,
    count: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::get_convolution_backward_data_algorithm_max_count(handle, count)
}

#[no_mangle]
pub unsafe extern "system" fn cudnnFindConvolutionBackwardDataAlgorithm(
    handle: cudnnHandle_t,
    wDesc: cudnnFilterDescriptor_t,
    dyDesc: cudnnTensorDescriptor_t,
    convDesc: cudnnConvolutionDescriptor_t,
    dxDesc: cudnnTensorDescriptor_t,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnConvolutionBwdDataAlgoPerf_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnFindConvolutionBackwardDataAlgorithmEx(
    handle: cudnnHandle_t,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    convDesc: cudnnConvolutionDescriptor_t,
    dxDesc: cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnConvolutionBwdDataAlgoPerf_t,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionBackwardDataAlgorithm_v7(
    handle: cudnnHandle_t,
    filterDesc: cudnnFilterDescriptor_t,
    diffDesc: cudnnTensorDescriptor_t,
    convDesc: cudnnConvolutionDescriptor_t,
    gradDesc: cudnnTensorDescriptor_t,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnConvolutionBwdDataAlgoPerf_t,
) -> cudnnStatus_t {
    crate::get_convolution_backward_data_algorithm_v7(
        handle,
        filterDesc,
        diffDesc,
        convDesc,
        gradDesc,
        requestedAlgoCount,
        returnedAlgoCount,
        perfResults,
        usize::MAX,
    )
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionBackwardDataWorkspaceSize(
    handle: cudnnHandle_t,
    wDesc: cudnnFilterDescriptor_t,
    dyDesc: cudnnTensorDescriptor_t,
    convDesc: cudnnConvolutionDescriptor_t,
    dxDesc: cudnnTensorDescriptor_t,
    algo: cudnnConvolutionBwdDataAlgo_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::get_convolution_backward_data_workspace_size(
        handle,
        wDesc,
        dyDesc,
        convDesc,
        dxDesc,
        algo,
        sizeInBytes,
    )
}

#[no_mangle]
pub unsafe extern "system" fn cudnnConvolutionBackwardData(
    handle: cudnnHandle_t,
    alpha: *const ::std::os::raw::c_void,
    wDesc: cudnnFilterDescriptor_t,
    w: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    convDesc: cudnnConvolutionDescriptor_t,
    algo: cudnnConvolutionBwdDataAlgo_t,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    beta: *const ::std::os::raw::c_void,
    dxDesc: cudnnTensorDescriptor_t,
    dx: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::convolution_backward_data(
        handle,
        alpha,
        wDesc,
        w,
        dyDesc,
        dy,
        convDesc,
        algo,
        workSpace,
        workSpaceSizeInBytes,
        beta,
        dxDesc,
        dx,
    )
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetFoldedConvBackwardDataDescriptors(
    handle: cudnnHandle_t,
    filterDesc: cudnnFilterDescriptor_t,
    diffDesc: cudnnTensorDescriptor_t,
    convDesc: cudnnConvolutionDescriptor_t,
    gradDesc: cudnnTensorDescriptor_t,
    transformFormat: cudnnTensorFormat_t,
    foldedFilterDesc: cudnnFilterDescriptor_t,
    paddedDiffDesc: cudnnTensorDescriptor_t,
    foldedConvDesc: cudnnConvolutionDescriptor_t,
    foldedGradDesc: cudnnTensorDescriptor_t,
    filterFoldTransDesc: cudnnTensorTransformDescriptor_t,
    diffPadTransDesc: cudnnTensorTransformDescriptor_t,
    gradFoldTransDesc: cudnnTensorTransformDescriptor_t,
    gradUnfoldTransDesc: cudnnTensorTransformDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCnnInferVersionCheck() -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionBackwardFilterAlgorithmMaxCount(
    handle: cudnnHandle_t,
    count: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnFindConvolutionBackwardFilterAlgorithm(
    handle: cudnnHandle_t,
    xDesc: cudnnTensorDescriptor_t,
    dyDesc: cudnnTensorDescriptor_t,
    convDesc: cudnnConvolutionDescriptor_t,
    dwDesc: cudnnFilterDescriptor_t,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnConvolutionBwdFilterAlgoPerf_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnFindConvolutionBackwardFilterAlgorithmEx(
    handle: cudnnHandle_t,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    y: *const ::std::os::raw::c_void,
    convDesc: cudnnConvolutionDescriptor_t,
    dwDesc: cudnnFilterDescriptor_t,
    dw: *mut ::std::os::raw::c_void,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnConvolutionBwdFilterAlgoPerf_t,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionBackwardFilterAlgorithm_v7(
    handle: cudnnHandle_t,
    srcDesc: cudnnTensorDescriptor_t,
    diffDesc: cudnnTensorDescriptor_t,
    convDesc: cudnnConvolutionDescriptor_t,
    gradDesc: cudnnFilterDescriptor_t,
    requestedAlgoCount: ::std::os::raw::c_int,
    returnedAlgoCount: *mut ::std::os::raw::c_int,
    perfResults: *mut cudnnConvolutionBwdFilterAlgoPerf_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetConvolutionBackwardFilterWorkspaceSize(
    handle: cudnnHandle_t,
    xDesc: cudnnTensorDescriptor_t,
    dyDesc: cudnnTensorDescriptor_t,
    convDesc: cudnnConvolutionDescriptor_t,
    gradDesc: cudnnFilterDescriptor_t,
    algo: cudnnConvolutionBwdFilterAlgo_t,
    sizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnConvolutionBackwardFilter(
    handle: cudnnHandle_t,
    alpha: *const ::std::os::raw::c_void,
    xDesc: cudnnTensorDescriptor_t,
    x: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    convDesc: cudnnConvolutionDescriptor_t,
    algo: cudnnConvolutionBwdFilterAlgo_t,
    workSpace: *mut ::std::os::raw::c_void,
    workSpaceSizeInBytes: usize,
    beta: *const ::std::os::raw::c_void,
    dwDesc: cudnnFilterDescriptor_t,
    dw: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnConvolutionBackwardBias(
    handle: cudnnHandle_t,
    alpha: *const ::std::os::raw::c_void,
    dyDesc: cudnnTensorDescriptor_t,
    dy: *const ::std::os::raw::c_void,
    beta: *const ::std::os::raw::c_void,
    dbDesc: cudnnTensorDescriptor_t,
    db: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateFusedOpsConstParamPack(
    constPack: *mut cudnnFusedOpsConstParamPack_t,
    ops: cudnnFusedOps_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyFusedOpsConstParamPack(
    constPack: cudnnFusedOpsConstParamPack_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetFusedOpsConstParamPackAttribute(
    constPack: cudnnFusedOpsConstParamPack_t,
    paramLabel: cudnnFusedOpsConstParamLabel_t,
    param: *const ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetFusedOpsConstParamPackAttribute(
    constPack: cudnnFusedOpsConstParamPack_t,
    paramLabel: cudnnFusedOpsConstParamLabel_t,
    param: *mut ::std::os::raw::c_void,
    isNULL: *mut ::std::os::raw::c_int,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateFusedOpsVariantParamPack(
    varPack: *mut cudnnFusedOpsVariantParamPack_t,
    ops: cudnnFusedOps_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyFusedOpsVariantParamPack(
    varPack: cudnnFusedOpsVariantParamPack_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnSetFusedOpsVariantParamPackAttribute(
    varPack: cudnnFusedOpsVariantParamPack_t,
    paramLabel: cudnnFusedOpsVariantParamLabel_t,
    ptr: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnGetFusedOpsVariantParamPackAttribute(
    varPack: cudnnFusedOpsVariantParamPack_t,
    paramLabel: cudnnFusedOpsVariantParamLabel_t,
    ptr: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCreateFusedOpsPlan(
    plan: *mut cudnnFusedOpsPlan_t,
    ops: cudnnFusedOps_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnDestroyFusedOpsPlan(plan: cudnnFusedOpsPlan_t) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnMakeFusedOpsPlan(
    handle: cudnnHandle_t,
    plan: cudnnFusedOpsPlan_t,
    constPack: cudnnFusedOpsConstParamPack_t,
    workspaceSizeInBytes: *mut usize,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnFusedOpsExecute(
    handle: cudnnHandle_t,
    plan: cudnnFusedOpsPlan_t,
    varPack: cudnnFusedOpsVariantParamPack_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnCnnTrainVersionCheck() -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBackendCreateDescriptor(
    descriptorType: cudnnBackendDescriptorType_t,
    descriptor: *mut cudnnBackendDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBackendDestroyDescriptor(
    descriptor: cudnnBackendDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBackendInitialize(
    descriptor: cudnnBackendDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBackendFinalize(
    descriptor: cudnnBackendDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBackendSetAttribute(
    descriptor: cudnnBackendDescriptor_t,
    attributeName: cudnnBackendAttributeName_t,
    attributeType: cudnnBackendAttributeType_t,
    elementCount: i64,
    arrayOfElements: *const ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBackendGetAttribute(
    descriptor: cudnnBackendDescriptor_t,
    attributeName: cudnnBackendAttributeName_t,
    attributeType: cudnnBackendAttributeType_t,
    requestedElementCount: i64,
    elementCount: *mut i64,
    arrayOfElements: *mut ::std::os::raw::c_void,
) -> cudnnStatus_t {
    crate::unsupported()
}

#[no_mangle]
pub unsafe extern "system" fn cudnnBackendExecute(
    handle: cudnnHandle_t,
    executionPlan: cudnnBackendDescriptor_t,
    variantPack: cudnnBackendDescriptor_t,
) -> cudnnStatus_t {
    crate::unsupported()
}
